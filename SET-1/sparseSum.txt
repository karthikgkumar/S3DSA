This C program implements the addition of two sparse matrices. A sparse matrix is a matrix that has a large number of elements with a value of zero. Instead of storing all the elements in the matrix, it is more efficient to only store the non-zero elements along with their row and column indices.

The program defines a sparse structure which has three integer fields - row, col, and val. The row and col fields represent the row and column indices of the non-zero element in the matrix, and the val field represents the value of the non-zero element.

The program has three functions - readSparse(), printSparse(), and sparseSum().

The readSparse() function reads a sparse matrix in sparse form and stores it in an array of sparse structures. The function takes an array of sparse structures and the number of non-zero elements in the matrix as input. It prompts the user to enter the number of rows and columns in the matrix and stores them in the row and col fields of the first element in the array. It then prompts the user to enter each non-zero element of the matrix in the format row column value and stores it in the row, col, and val fields of each subsequent element in the array.

The printSparse() function prints the contents of an array of sparse structures in a tabular form. The function takes an array of sparse structures as input and prints the row, col, and val fields of each element in the array.

The sparseSum() function computes the sum of two sparse matrices and stores the result in a third sparse matrix. The function takes three arrays of sparse structures as input - the two matrices to be added and the matrix to store the result. It first checks if the dimensions of the two matrices are the same. If not, it prints an error message and exits the program. It then initializes the row and col fields of the first element in the sum array with the dimensions of the matrices. The function then iterates over the non-zero elements of the two matrices and adds them element-wise. The result is stored in the sum array.

The main() function of the program prompts the user to enter the number of non-zero elements in each of the two matrices. It then calls the readSparse() function to read each matrix and stores them in separate arrays. It then calls the sparseSum() function to compute the sum of the two matrices and stores the result in another array. Finally, it calls the printSparse() function to print the input matrices and the result of the addition.

OUTPUT
enter number of non zero elements in matrix 1 
3
enter number of rows
2
enter number of columns
3
enter sparse matrix in sparse form 
0 1 1
1 0 2
1 2 3
enter number of non zero elements in matrix 2 
2
enter number of rows
2
enter number of columns
3
enter sparse matrix in sparse form 
0 0 4
0 2 5


First matrix: 
Rows Column Value
2	3	3
0	1	1
1	0	2

Second matrix: 
Rows Column Value
2	3	2
0	0	4
0	2	5

Sum:
Rows Column Value
2	3	3
0	0	4
0	1	1
0	2	5
1	0	2
In this example, we first enter a sparse matrix of size 2x3 with 3 non-zero elements. The non-zero elements are (0,1) with value 1, (1,0) with value 2, and (1,2) with value 3. Then we enter another sparse matrix of size 2x3 with 2 non-zero elements. The non-zero elements are (0,0) with value 4 and (0,2) with value 5.

The program then calculates the sum of the two sparse matrices and outputs the resulting matrix, which has 5 non-zero elements.